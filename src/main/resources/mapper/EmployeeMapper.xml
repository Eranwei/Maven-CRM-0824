<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.EmployeeMapper" >

  <resultMap id="BaseResultMap" type="com.model.Employee" >
    <id column="empid" property="empid" jdbcType="INTEGER" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="userPassword" property="userPassword" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="empName" property="empName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="roleId" property="roleId" jdbcType="INTEGER" />
    <association property="role" column="roleId" select="listRole"></association>
  </resultMap>

  <sql id="Base_Column_List" >
    empid, userName, userPassword, tel, empName, email, roleId
  </sql>

  <select id="listRole" resultType="Role" parameterType="int">
    select *
    from role
    WHERE roleId =#{roleId}
  </select>

  <update id="modifyall" parameterType="String" >
        update employees set userPassword = '00000'
    </update>

  <select id="list" resultMap="BaseResultMap" parameterType="Employee" >
    select
    <include refid="Base_Column_List" />
    from employees
  </select>

  <select id="getByUserName" resultType="Employee" parameterType="String" >
     select e.*, r.roleInfo from employees e,role r  where e.roleid=r.roleid and  userName=#{userName}
  </select>

  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employees
    where empid = #{empid,jdbcType=INTEGER}
  </select>

  <delete id="delete" parameterType="java.lang.Integer" >
    delete from employees
    where empid = #{empid,jdbcType=INTEGER}
  </delete>


  <insert id="insert" parameterType="com.model.Employee" >
    insert into employees (userName, userPassword,
      tel, empName, email, roleId
      )
    values ( #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
      #{tel,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}
      )
  </insert>


  <update id="update" parameterType="com.model.Employee" >
    update employees
    <set >
      <if test="userName != null" >
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        userPassword = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="empName != null" >
        empName = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        roleId = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where empid = #{empid,jdbcType=INTEGER}
  </update>

</mapper>